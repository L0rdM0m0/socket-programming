#!/usr/bin/env python3

import socket
import sys
import traceback
import subprocess
from threading import Thread

def server():
    host = "127.0.0.1"
    port = 65432
    subprocess.call('clear', shell=True)

    try:
    	soc = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    	soc.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    	soc.bind((host,port))
    	print ('Socket successfully created')
    except:
    	print ('Unable to bind to ' + host + " " + str(port))
    	sys.exit()

    soc.listen(3)       
    print('Server is listening on port ' + str(port))

    while True:
        conn, addr = soc.accept()
        print ('Server connected to client ' + str(addr[0]) + " " + str(addr[1]))	

        try:
            Thread(target=client_thread, args=(conn, addr)).start()
        except:
            print('Unable to create a thread')
            traceback.print_exc()

    soc.close()


def client_thread(connection, addr, max_buffer_size = 1024):
    is_active = True

    while is_active:
    	client_input = connection.recv(max_buffer_size)
    	mes = str(client_input.decode('utf-8'))

    	if mes.upper() == 'QUIT':
    		print ('Closing connection for ' + str(addr[0]) + " " + str(addr[1]))
    		break

    	print ("Msg from " + str(addr[0]) + " " + str(addr[1])+" : "+ mes)

            #connection.sendall("-".encode("utf8"))


try:
	server()
except KeyboardInterrupt:
    print ('Interrupted, closing the socket and quitting')
    sys.exit(0)
